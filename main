#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#define ANSI_COLOR_1      "\x1b[91m"//vermelho
#define ANSI_COLOR_2      "\x1b[92m"//verde
#define ANSI_COLOR_3      "\x1b[93m"//amarelo
#define ANSI_COLOR_4      "\x1b[94m"//azul
#define ANSI_COLOR_5      "\x1b[95m"//roxo
#define ANSI_COLOR_6      "\x1b[96m"//azul claro
#define ANSI_COLOR_7      "\x1b[97m"//branco
#define MAX_MENSAGEM 512 // Tamanho máximo da mensagem

void apagarTela(){
    #ifdef _WIN32
        system("cls");
    #else
        system("clear");
    #endif
}

typedef struct{
    char tempo[50];
} tp_tempo;

void enviar_mensagens_de_apoio() {
    const char* categorias[] = {"crianca", "jovem", "adulto"}; // Categorias disponíveis
    char categoria[20];
    int categoria_index = -1; // Índice da categoria escolhida
    char continuar; // Variável para controlar se o usuário deseja continuar

    do {
        // Loop para garantir que uma categoria válida seja escolhida
        categoria_index = -1; // Reseta o índice da categoria
        while (categoria_index == -1) {
            printf("Escolha uma categoria (crianca, jovem, adulto): ");
            scanf("%s", categoria);
            for (int i = 0; i < 3; i++) {
                if (strcmp(categoria, categorias[i]) == 0) {
                    categoria_index = i; // Atualiza o índice da categoria
                    break;
                }
            }
            if (categoria_index == -1) {
                printf("Categoria desconhecida. Tente novamente.\n");
            }
        }

        // Solicita ao usuário para digitar uma mensagem
        char mensagem[MAX_MENSAGEM];
        printf("Digite sua mensagem de apoio: ");
        getchar(); // Limpa o buffer do teclado
        fgets(mensagem, MAX_MENSAGEM, stdin); // Lê a mensagem do usuário
        mensagem[strcspn(mensagem, "\n")] = 0; // Remove a nova linha, se presente

        // Exibe a categoria e a mensagem digitada
        printf("Você escolheu a categoria: %s\n", categorias[categoria_index]);
        printf("E enviou a seguinte mensagem:\n%s\n\n", mensagem);

        // Pergunta se o usuário deseja enviar outra mensagem
        printf("Deseja enviar outra mensagem? (s/n): ");
        scanf(" %c", &continuar); // Lê a resposta do usuário

    } while (continuar == 's' || continuar == 'S'); // Continua se a resposta for 's' ou 'S'

    printf("Obrigado por suas mensagens de apoio!\n");
}


void verificarTempo(){
    char cidade[50];
    tp_tempo tempo[4] = {"Chuva moderada","Ensolarado","Nublado","Instavel"};
    int dia, mes;
    printf("Digite o nome da cidade: ");
    scanf(" %[^\n]s", cidade);
    printf("\nDigite o dia: ");
    scanf(" %d", &dia);
    printf("\nDigite o mes: ");
    scanf(" %d", &mes);
    if(mes<1 || dia<1 || mes>12 || dia>31){
        printf("\nData invalida\n");
        return verificarTempo();
    } else {
        srand(dia*mes);
        printf("\nPrevisao do tempo para %s em %d/%d: ", cidade, dia, mes);
        int clima = rand()%4;
        printf(" %s", tempo[clima].tempo);
    }
}


int escolha();
int menu(){
apagarTela();

printf(ANSI_COLOR_6);
printf("---------------------------------------\n");
printf("Escolha entre as seguintes opcoes:\n\n");
printf("1) Verificar a previsao do tempo\n");
printf("2) Doar para vitimas da chuva\n");
printf("3) Enviar mensagens de apoio\n");
printf("4) Sair\n");
printf("---------------------------------------\n\n");
printf(ANSI_COLOR_7);

escolha();
}

int escolha(){
int num;
char letra;
scanf("%d", &num);

apagarTela();
switch(num){
    case 1:
        verificarTempo();
        
        printf("\n\nVoce deseja voltar para a tela inicial? (s/n)\n");
        scanf(" %c", &letra);

        if(letra == 's') return menu();
        if(letra == 'n') return 0;
        break;

    case 2:
        break;

    case 3:
        enviar_mensagens_de_apoio();

        printf("\n\nVoce deseja voltar para a tela inicial? (s/n)\n");
        scanf(" %c", &letra);

        if(letra == 's') return menu();
        if(letra == 'n') return 0;
        break;

    case 4:  
        printf("Voce realmente deseja finalizar o programa? (s/n)\n");
        scanf(" %c", &letra);
        
        if(letra == 's') return 0;
        if(letra == 'n') return menu();
        else { 
            printf("Opcao invalida. Tente novamente.\n");
            return escolha();
        }
        break;

    default:
        printf("Numero invalido. Tente novamente.\n");
            return escolha();
            break;
} }


int main(){
apagarTela();

printf("Bem vindo(a) ao ");
printf(ANSI_COLOR_4"MoniTorando!\n");
printf(ANSI_COLOR_7"Seu algoritmo de monitoramento de chuvas no Rio Grande do Sul.\n");

sleep(8);

menu();

return 0;
}
